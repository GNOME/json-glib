/*** BEGIN file-header ***/
/* json-enum-types.c: Enumeration GTypes
 *
 * This file is part of JSON-GLib
 *
 * SPDX-FileCopyrightText: The JSON-GLib authors
 * SPDX-License-Identifier: LGPL-2.1-or-later
 *
 * This file is generated by glib-mkenums; do not modify.
 */

#ifndef JSON_COMPILATION
#define JSON_COMPILATION
#endif

#include "config.h"
#include "json-enum-types.h"
/*** END file-header ***/

/*** BEGIN file-production ***/

/* enumerations from "@basename@" */
#include "@basename@"

/*** END file-production ***/

/*** BEGIN value-header ***/
GType
@enum_name@_get_type (void)
{
  static gsize g_enum_type_id__volatile = 0;

  if (g_once_init_enter (&g_enum_type_id__volatile))
    {
      static const G@Type@Value values[] = {
/*** END value-header ***/

/*** BEGIN value-production ***/
        { @VALUENAME@, "@VALUENAME@", "@valuenick@" },
/*** END value-production ***/

/*** BEGIN value-tail ***/
        { 0, NULL, NULL }
      };

      GType g_enum_type_id =
        g_@type@_register_static (g_intern_static_string ("@EnumName@"), values);

      g_once_init_leave (&g_enum_type_id__volatile, g_enum_type_id);
    }

  return g_enum_type_id__volatile;
}
/*** END value-tail ***/
